{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","onClick","event","preventDefault","window","open","currentTarget","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setTouched","hasError","trim","notValidData","includes","test","htmlFor","classNames","type","placeholder","target","onBlur","urlIsValid","NewMovie","onAdd","count","setCount","isDisabled","setIsDisabled","newMovie","setNewMovie","handleInputChange","onSubmit","prevState","disabled","App","moviesFromServer","setMovieList","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.511e38ab.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a\n          href={movie.imdbUrl}\n          onClick={(event) => {\n            event.preventDefault();\n            window.open(event.currentTarget.href, '_blank');\n          }}\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (name: string, value: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nfunction validData(url: string) {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value.trim();\n  const notValidData = ['imgUrl', 'imdbUrl'].includes(name) && touched\n    && !validData(value);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => {\n            event.preventDefault();\n            onChange(name, event.target.value);\n          }}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {notValidData && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void,\n};\n\n// eslint-disable-next-line max-len\nconst urlIsValid = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n    setCount(prevState => prevState + 1);\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n    setIsDisabled(true);\n  };\n\n  const handleInputChange = (name: string, value: string): void => {\n    setNewMovie({\n      ...newMovie,\n      [name]: value,\n    });\n\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = newMovie;\n\n    const allInputAreValid = title\n      && urlIsValid.test(imgUrl) && urlIsValid.test(imdbUrl) && imdbId;\n\n    if (allInputAreValid) {\n      setIsDisabled(false);\n    }\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={handleInputChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={handleInputChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={handleInputChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={handleInputChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={handleInputChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovieList] = useState(moviesFromServer);\n\n  const addNewMovie = (movie: Movie) => {\n    setMovieList(prevMovies => ([\n      ...prevMovies,\n      movie,\n    ]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}